#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

SELECT * FROM BIT_DB.customers LIMIT 20;

SELECT * FROM BIT_DB.JanSales LIMIT 5;

SELECT * FROM BIT_DB.customers WHERE length(order_id) = 6
AND order_id <> 'Order ID'
LIMIT 5;

--Found how many orders were placed in January
SELECT COUNT(orderID)
FROM JanSales
WHERE length(orderID) = 6;

--Found how many orders were placed in January on an iPhone
SELECT COUNT(orderID)
FROM JanSales
WHERE Product = "iPhone" AND length(orderID) = 6;

--Found product that was the cheapest one sold in January, and the price
SELECT Product, price
FROM JanSales
WHERE length(orderID) = 6
ORDER BY price ASC
LIMIT 1;

--Found the total revenue for each product sold in January 
SELECT SUM ((Quantity * price)), product
FROM JanSales
WHERE length(orderID) = 6
GROUP BY product;

--Found products sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and the total revenue
SELECT Product, Sum (Quantity), Quantity * Price AS "Total Revenue"
FROM FebSales 
WHERE location = "548 Lincoln St, Seattle, WA 98101" AND length(orderID) = 6
GROUP BY Product;

--Found number of customers who ordered more than 2 products at a time in February, and the average amount spent for those customers
SELECT COUNT (distinct acctnum), AVG (Quantity * Price) AS "Amount Spent"
FROM customers
LEFT JOIN FebSales 
ON customers.order_id = FebSales.orderID
WHERE Quantity > 2 and length(orderID) = 6;

--Listed the dates of orders placed between a certain timeframe
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

--Found the location of an order placed at a specific time
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

--Found the amount of item sold on Feb 18th
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

--Listed all battery items
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

--Listed all the prices that end with .99
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

--Listed all the products sold in Los Angeles in February, and included how many of each were sold
SELECT distinct Product, quantity
FROM BIT_DB.FebSales
WHERE location LIKE "%Los Angeles%"
GROUP BY Product;

-- Listed the locations in New York that received at least 3 orders in January, and how many orders they each received
SELECT COUNT(*) AS "Number of Orders", location
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
GROUP BY location
HAVING "Number of Orders" >= 3;

--Found number of each type of headphone sold in February
SELECT Product, Sum(Quantity)
FROM BIT_DB.FebSales
WHERE Product LIKE "%Headphone%"
GROUP BY Product;

--Found the average amount spent by each account in February
SELECT Customers.acctnum, (Feb.Quantity * Feb.price) / COUNT(Customers.acctnum)AS "Average Spent By Account"
FROM BIT_DB.customers Customers
JOIN BIT_DB.FebSales Feb
ON Customers.order_ID = Feb.orderID
GROUP BY acctnum;

--Found the average amount spent per account in February
SELECT sum(Feb.Quantity * Feb.price)/ COUNT(Customers.acctnum) AS "Average Spent"
FROM BIT_DB.customers Customers
JOIN BIT_DB.FebSales Feb
ON Customers.order_ID = Feb.orderID;

--Found the average quantity of products purchased by each account in February
SELECT Customers.acctnum, Avg(Feb.Quantity) AS "Average Quantity"
FROM BIT_DB.customers Customers
JOIN BIT_DB.FebSales Feb
ON Customers.order_ID = Feb.orderID
GROUP BY acctnum;

--Found the average quantity of products purchased in February
SELECT Avg(Feb.Quantity) AS "Average Quantity"
FROM BIT_DB.customers Customers
JOIN BIT_DB.FebSales Feb
ON Customers.order_ID = Feb.orderID;

--Found the product that brought in the most revenue in January and total revenue it generated
SELECT Product, SUM(Price * Quantity) AS "Total Revenue"
FROM BIT_DB.FebSales
GROUP BY Product
ORDER BY "Total Revenue" DESC
LIMIT 1;

