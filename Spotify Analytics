--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

--First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT * FROM Spotifydata;

SELECT AVG(popularity), AVG(danceability), AVG(energy), artist_name, track_name
FROM Spotifydata
GROUP BY artist_name, track_name;

--Listed the songs from most popular to least popular.
SELECT track_name, artist_name, popularity
FROM Spotifydata
ORDER BY Popularity DESC;

--Determined the most popular artist and their popularity
SELECT artist_name, AVG(popularity)
FROM Spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 1;

--Calculated the average popularity for the artists in the Spotify data table. 
WITH AristPopularity AS 
(SELECT artist_name, AVG(popularity) AS Average_By_Artist
FROM Spotifydata
GROUP BY artist_name)

--Then, for every artist with an average popularity of 90 or above, showed their name, their average popularity, and labeled them as a “Top Star”.
SELECT artist_name, Average_By_Artist, 'Top Star' AS tag
FROM AristPopularity
WHERE Average_By_Artist >= 90;

